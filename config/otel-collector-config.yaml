receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  # Prometheus receiver for scraping metrics
  prometheus:
    config:
      scrape_configs:
        - job_name: 'data-pipeline'
          scrape_interval: 15s
          static_configs:
            - targets: ['data-pipeline:8003']
          metrics_path: '/metrics'
          scheme: 'http'

processors:
  batch:
    timeout: 10s
    send_batch_size: 1024
  
  # Add resource attributes
  resource:
    attributes:
      - key: service.name
        value: data-pipeline
        action: upsert
      - key: service.version
        value: "1.0.0"
        action: upsert
      - key: deployment.environment
        value: local
        action: upsert

  # Memory limiter to prevent OOM (moved to extensions)
  # memory_limiter:
  #   limit_mib: 512
  #   check_interval: 1s

exporters:
  prometheus:
    endpoint: "0.0.0.0:8889"
    namespace: obsidian_pipeline
    const_labels:
      environment: local
      service: data-pipeline

  # Debug exporter for troubleshooting
  debug:
    verbosity: normal
    sampling_initial: 5
    sampling_thereafter: 200

  # Logging exporter
  logging:
    loglevel: info

service:
  pipelines:
    metrics:
      receivers: [otlp, prometheus]
      processors: [resource, batch]
      exporters: [prometheus, debug, logging]
    
    traces:
      receivers: [otlp]
      processors: [resource, batch]
      exporters: [debug, logging]
    
    logs:
      receivers: [otlp]
      processors: [resource, batch]
      exporters: [debug, logging]

  # extensions: [memory_limiter]  # Removed memory_limiter
