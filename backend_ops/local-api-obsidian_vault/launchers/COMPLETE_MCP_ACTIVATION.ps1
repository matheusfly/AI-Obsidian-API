# üöÄ COMPLETE MCP ACTIVATION SCRIPT
Write-Host "üöÄ COMPLETE MCP ACTIVATION" -ForegroundColor Cyan
Write-Host "=========================" -ForegroundColor Cyan

# Load environment variables
Write-Host "
üìç Step 1: Loading environment variables..." -ForegroundColor Yellow
& ".\LOAD_MCP_ENV.ps1"

# Start all MCP servers
Write-Host "
üìç Step 2: Starting MCP servers..." -ForegroundColor Yellow
& ".\START_MCP_SERVERS.ps1"

# Wait for servers to initialize
Write-Host "
üìç Step 3: Waiting for servers to initialize..." -ForegroundColor Yellow
Start-Sleep -Seconds 5

# Test server connections
Write-Host "
üìç Step 4: Testing server connections..." -ForegroundColor Yellow

# Test filesystem server
try {
    Write-Host "   Testing filesystem server..." -ForegroundColor Cyan
     = npx -y @modelcontextprotocol/server-filesystem --help 2>&1
    Write-Host "   ‚úÖ Filesystem server ready" -ForegroundColor Green
} catch {
    Write-Host "   ‚ö†Ô∏è  Filesystem server test inconclusive" -ForegroundColor Yellow
}

# Test GitHub server
try {
    Write-Host "   Testing GitHub server..." -ForegroundColor Cyan
     = npx -y @modelcontextprotocol/server-github --help 2>&1
    Write-Host "   ‚úÖ GitHub server ready" -ForegroundColor Green
} catch {
    Write-Host "   ‚ö†Ô∏è  GitHub server test inconclusive" -ForegroundColor Yellow
}

# Test sequential-thinking server
try {
    Write-Host "   Testing sequential-thinking server..." -ForegroundColor Cyan
     = npx -y @modelcontextprotocol/server-sequential-thinking --help 2>&1
    Write-Host "   ‚úÖ Sequential-thinking server ready" -ForegroundColor Green
} catch {
    Write-Host "   ‚ö†Ô∏è  Sequential-thinking server test inconclusive" -ForegroundColor Yellow
}

Write-Host "
üéâ MCP ACTIVATION COMPLETE!" -ForegroundColor Cyan
Write-Host "===========================" -ForegroundColor Cyan

Write-Host "
‚úÖ All MCP servers are now running!" -ForegroundColor Green
Write-Host "
üìã Next steps:" -ForegroundColor Yellow
Write-Host "   1. Go to Cursor MCP Tools panel" -ForegroundColor White
Write-Host "   2. Click the toggle switches to enable each server" -ForegroundColor White
Write-Host "   3. All servers should now show as 'Enabled'" -ForegroundColor White
Write-Host "   4. Test MCP tools functionality" -ForegroundColor White

Write-Host "
üéØ Available MCP servers:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ filesystem - File operations" -ForegroundColor White
Write-Host "   ‚Ä¢ github - GitHub integration" -ForegroundColor White
Write-Host "   ‚Ä¢ sequential-thinking - AI reasoning" -ForegroundColor White
Write-Host "   ‚Ä¢ playwright - Web automation" -ForegroundColor White
Write-Host "   ‚Ä¢ context7 - Context management" -ForegroundColor White
Write-Host "   ‚Ä¢ shadcn-ui - UI components" -ForegroundColor White
Write-Host "   ‚Ä¢ byterover-mcp - ByteRover integration" -ForegroundColor White
Write-Host "   ‚Ä¢ fetch - Web fetching" -ForegroundColor White
Write-Host "   ‚Ä¢ brave-search - Web search" -ForegroundColor White

Write-Host "
üöÄ Ready to use all MCP tools in Cursor!" -ForegroundColor Green
